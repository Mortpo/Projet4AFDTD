/* FDÃ©d_3.3.C. 2D TM program with plane wave source */


#define IE 60
#define JE 60

main ()
{
	

	float ez_inc[JE],hx_inc[JE];
	float ez_inc_low_ml,ez_inc_low_m2;
	float ez_inc_high_ml,ez_inc_high_m2;
	int ia,ib,ja,jb;

	ic = IE/2;
	jc = JE/2 ;
	 ia = 7;
     ib = IE-ia-1;
     ja = 7 ;
     jb = JE-ja-1;
    ddx = .01;
    dt = ddx/6e8;
    epsz = 8.8e-12 ;
    pi =3.14159;

    t0 = 20.0 ;
    spread = 8.0;
    T = 0 ;
    nsteps = 1 ;

    while (nsteps > 0) {
        printf("nsteps = =>");
        scanf ("%d",&nsteps );
        printf("%d \ n",nsteps);

      for (n=1,n<=nsteps;n++) {
        T =T+1


     /* start of the main FDTD LOOP */
           for (j=1;j< JE;j++) {
           ez_inc[j] = ez_inc[j]+ .5*(hx_inc[j-1]-hx_inc[j]);

           }
           /* ABC for the incident buffer */
           ez_inc[0] = ez_inc_low_m2;
           ez_inx_low_m2 = ez_inc_low_m1;
           ez_inc_low_m1 = ez_inc[1];

           ez_inc[JE-1] = ez_inc_high_m2;
           ez_inc_high_m2 = ez_inc_high_m1;
           ez_inc_high_m1 = ez_inc[JE-2];


           /* calculated the Dz filed */
              for(j=1;j <IE,j++) {
                  for (i=1;i< IE;i++){
                    dz[i][j] =gi3[i]*gj3[j]*dz[i][j]+gi2[i]*gj2[j]*.5*(hy[i][j]-hy[i-1][j]-hx[i][j]+hx[i][j-1]) ;
                  }
              }

              /* source */

             /* pulse = sin(2*pi*400*Ie6*dt*T) */

             pulse = exp(-0.5*(pow((t0-T)/spread,2.0) ));
             ez_inc[3] = pulse;

             /*incident dz values */

             for (i=ia;i<=ib;i++) {
               dz[i][ja] = dz[i][ja] + 0.5*hx_inc[ja-1];
               dz[i][jb] = dz[i][jb]- 0.5*hx_inc[jb];

             }
              
              /* clalculated the Ez filed */
                for (j=0;j<JE;j++) {
                  for (i=0;i<IE;i++) {
                  ez[i][j]=ga[i][j]*dz[i][j];
                  }

                }
                printf("%3f.0 %6.2f \n",T,ez[ic][jc]);
             /* set the Ez edges to 0,as part of the PML */
             for (j=0; j<JE-1;j++) {
               ez[0][j] = 0.0;
               ez[IE-1][j]=0.0;
             }
             for (i=0;i<IE-1;i++) {
             ez[i][0] =0.0;
             ez[i][JE-1] =0.0;
             }
             for (j=0;j<JE;j++){
               hx_inc[j] = hx_inc[j] + .5*(ez_inc[j]-ez_inc[j+1]);
             }

             /* calculated the HX filed */
               for (j=0;j<JE-1;j++) {
                 for (i=0;i<IE;i++) {
                 curl_e = ez[i][j]-ez[i][j+1];
                 ihx[i][j] = ihx[i][j]+ fil[i]*curl_e;
                 hx[i][j] = fj3[j]*hx[i][j] + fj2[j]*.5(curl_e + ihx[i][j]);
                 }
               }

             /* incident HX values */
                for (i=ia;i<=ib;i++) {
                hx[i][ja-1] = hx[i][ja-1]  + .5*ez_inc[ja];
                hx[i][jb] = hx[i][jb]- 0.5*ez_inc[jb];
                } 

                /* calculated HE HY filed */
                for (j=0; j<= JE-1;j++){
                   for(i=0;i< IE-1;i++) {
                   curl_e = ez[i+1][j]-ez[i][j];
                   ihy[i][j] = ihy[i][j] +fj1[j]*curl_e;
                   hy[i][j] =fi3[i]*hy[i][j] +fi2[i]*.5*(curl_e+ ihy[i][j]);

                   }
                }
                /* incident Hy Values */
                for (j=ja;j<= jb; j++) {
                hy[ia-1][j] = hy[ia-1][j]-.5*ez_inc[j];
                hy[ib][j] = hy[ib][j] +.5*ez_inc[j];
                }






      
      }  
    }

}
